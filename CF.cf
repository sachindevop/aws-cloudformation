AWSTemplateFormatVersion: '2010-09-09'
Description: Create a VPC with 4 Private Subnets, 1 Public Subnet, IGW attached to VPC, NAT Gateway, and one EC2 Instance launched in private subnet with NAT Gateway

# Parameters
Parameters:
  VpcName:
    Type: String
    Description: Name of the VPC
  VpcCidrBlock:
    Type: String
    Description: CIDR block for the VPC
  SubnetCidrBlock1:
    Type: String
    Description: CIDR block for the Subnet1
  SubnetCidrBlock2:
    Type: String
    Description: CIDR block for the Subnet2
  SubnetCidrBlock3:
    Type: String
    Description: CIDR block for the Subnet3
  SubnetCidrBlock4:
    Type: String
    Description: CIDR block for the Subnet4
  SubnetCidrBlock5:
    Type: String
    Description: CIDR block for the Subnet5
  EC2InstanceType:
    Type: String
    Description: EC2 instance type

# Resources
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref VpcName

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref SubnetCidrBlock1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Subnet1

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref SubnetCidrBlock2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Subnet2

  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref SubnetCidrBlock3
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Subnet3

  Subnet4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 3, !GetAZs '' ]
      CidrBlock: !Ref SubnetCidrBlock4
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Subnet4

  Subnet5:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 4, !GetAZs '' ]
      CidrBlock: !Ref SubnetCidrBlock5
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Subnet5

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-IGW

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref Subnet5

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Public-RT

  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Private1-RT

  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Private2-RT

  RouteTablePrivate3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Private3-RT

  RouteTablePrivate4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Private4-RT

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTablePublic

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTablePrivate1

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet3
      RouteTableId: !Ref RouteTablePrivate2

  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet4
      RouteTableId: !Ref RouteTablePrivate3

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateRoute3:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties:
      RouteTableId: !Ref RouteTablePrivate3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateRoute4:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties:
      RouteTableId: !Ref RouteTablePrivate4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref Subnet2
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-Instance1

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref VPC
  Subnet1:
    Description: Subnet 1 ID
    Value: !Ref Subnet1
  Subnet2:
    Description: Subnet 2 ID
    Value: !Ref Subnet2
  Subnet3:
    Description: Subnet 3 ID
    Value: !Ref Subnet3
  Subnet4:
    Description: Subnet 4 ID
    Value: !Ref Subnet4
  Subnet5:
    Description: Subnet 5 ID
    Value: !Ref Subnet5
  EC2InstanceID:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance
